1) Como ahora vamos a hacer que el tiempo en ves de ser <tiempoCPU>3200</tiempoCPU> sino
   <tiempoCPU>3200</tiempoCPU> <tiempoIO>20</tiempoIO> <tiempoCPU>32</tiempoCPU>
   los tiempos de CPU los debemos llevar en un arraylist
   y las llamadas a getTiempoCPU y setTiempoCPU se deben hacer sobre ese arraylist

2) Al proceso debemos ponerle atributos como si termino o no, esto es para saber
   si realmente termino o se fue para I/O y saber si moverlo a la cola de 
   finalizados o a la cola del dispositivo. Otro atributo es un arraylist para
   saber los diferentes tiempo que este en I/O. No se me ocurre otro

3) Cada ves que se haga un notify para el dispositivo I/O llamado desde el reloj 
   este debe, decrementar el tiempo de I/O del primer proceso en su cola, aumentar
   el tiempoesperando y aumentar el tiempo durmiendo antes de ser despertado

4) Cuando se haga la llamada a despertar un proceso se usa el que ya tiene hector
   y se actualizan las colas y eso, Gracias hector

5) En el planificador modificar un poco el codigo de la funcion actualizarQuantum
   pues cuando el Quantum llegue a 0 o se acabe el tiempo de cpu del proceso, si
   aun tiene tiempo de I/O mandarlo a I/O

6) Cuando un proceso despierta de I/O saber si realmente debe volver a la cola de
   listos o a la de finalizados pues se puede dar el caso que el proceso solo que
   al final escriba por pantalla y muera asi evitamos cosas en la cola de listos
   que ocupan espacio y ya

7) El tiempo ocioso del CPU lo vamos a hacer como lo pensamos, que si un proceso 
   termina y su quantum no, se considera ocioso, ooooo que hagas ticks hasta que 
   haya algo en la cola de listos??? eso tambien hay que pensarlo no creo que sea
   mucho cambio

8) Interfaz que usaremos para las estadisticas el final, tiempo ocioso del cpu
   tiempo activo, tiempo que se uso la cola de dispositivo, tiempo promedio que 
   un proceso paso en la cola de listos, diganme algun otro

creo que ya si tiene algo que decir anexenlo al documento
   